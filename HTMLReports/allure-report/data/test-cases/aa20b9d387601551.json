{
  "uid" : "aa20b9d387601551",
  "name" : "test_e2e",
  "fullName" : "Tests.test_checking.TestOne#test_e2e",
  "historyId" : "2c679894aa0d32dc8664795cc871e26f",
  "time" : {
    "start" : 1594273476440,
    "stop" : 1594273502699,
    "duration" : 26259
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "self = <Tests.test_checking.TestOne object at 0x04453898>\n\n    def test_e2e(self):\n        driver = webdriver.Chrome(executable_path=\"D:\\\\Programming\\\\Gadgetmag\\\\Sourse\\\\chromedriver.exe\")\n        driver.get(\"https://www.gadgetmag.su/\")\n        driver.maximize_window()\n        print(\"================================\")\n    \n        # MAIN_BANNER_LOCATOR = (By.XPATH, \"//div[@id='page']/section/div[@class='main-slider-banner lapping']\")\n>       main_banner = WebDriverWait(driver, 20).until(\n            expected_conditions.visibility_of_element_located((By.XPATH, \"//div[@id='page']/section/div[@class='main-slider-banner lapping']\")))\n\ntest_checking.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"df6a9c354ccb362481aaad0e444da218\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x0448D2B0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\python 3.8.3\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "self = <Tests.test_checking.TestOne object at 0x04453898>\n\n    def test_e2e(self):\n        driver = webdriver.Chrome(executable_path=\"D:\\\\Programming\\\\Gadgetmag\\\\Sourse\\\\chromedriver.exe\")\n        driver.get(\"https://www.gadgetmag.su/\")\n        driver.maximize_window()\n        print(\"================================\")\n    \n        # MAIN_BANNER_LOCATOR = (By.XPATH, \"//div[@id='page']/section/div[@class='main-slider-banner lapping']\")\n>       main_banner = WebDriverWait(driver, 20).until(\n            expected_conditions.visibility_of_element_located((By.XPATH, \"//div[@id='page']/section/div[@class='main-slider-banner lapping']\")))\n\ntest_checking.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"df6a9c354ccb362481aaad0e444da218\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x0448D2B0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\python 3.8.3\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "417404ace99a3ceb",
      "name" : "stdout",
      "source" : "417404ace99a3ceb.txt",
      "type" : "text/plain",
      "size" : 33
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 0
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "Tests"
  }, {
    "name" : "suite",
    "value" : "test_checking"
  }, {
    "name" : "subSuite",
    "value" : "TestOne"
  }, {
    "name" : "host",
    "value" : "DESKTOP-D7ETIFJ"
  }, {
    "name" : "thread",
    "value" : "5544-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "Tests.test_checking"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "aa20b9d387601551.json",
  "parameterValues" : [ ]
}